{"version":3,"file":"/home/ferlux/Documentos/desarrollo/worskpaces/AngularJs/CrudAngular/tools/config/project.config.ts","sources":["/home/ferlux/Documentos/desarrollo/worskpaces/AngularJs/CrudAngular/tools/config/project.config.ts"],"names":[],"mappings":";;;;;;AAAA,qBAAqB,MAAM,CAAC,CAAA;AAE5B,4BAA2B,eAAe,CAAC,CAAA;AAM3C;IAAmC,iCAAU;IAO3C;QACE,iBAAO,CAAC;QANV,sBAAiB,GAAG,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC5E,eAAU,GAAM,IAAI,CAAC,QAAQ,WAAQ,CAAC;QACtC,cAAS,GAAG;YACR,oCAAoC;SACvC,CAAC;QAGC,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;QAMrC,IAAI,CAAC,gBAAgB,GAChB,IAAI,CAAC,gBAAgB;YACxB,EAAE,GAAG,EAAE,mCAAmC,EAAE,MAAM,EAAE,IAAI,EAAE;YAC1D,EAAC,GAAG,EAAE,2BAA2B,EAAE,MAAM,EAAE,MAAM,EAAC;YAClD,EAAE,GAAG,EAAE,0BAA0B,EAAE,MAAM,EAAE,MAAM,EAAE;YACnD,EAAC,GAAG,EAAE,sBAAsB,EAAE,MAAM,EAAE,MAAM,EAAC;UAG9C,CAAC;QAGF,IAAI,CAAC,UAAU,GACV,IAAI,CAAC,UAAU;YAClB,EAAE,GAAG,EAAK,IAAI,CAAC,OAAO,aAAU,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE;YAC/D,EAAE,GAAG,EAAE,oCAAoC,EAAE,MAAM,EAAE,MAAM,EAAE;YAC7D,EAAE,GAAG,EAAE,sCAAsC,EAAE,MAAM,EAAE,IAAI,EAAE;YAC7D,EAAE,GAAG,EAAE,4CAA4C,EAAE,MAAM,EAAE,IAAI,EAAE;YACnE,EAAE,GAAG,EAAE,gDAAgD,EAAE,MAAM,EAAE,IAAI,EAAE;UAGxE,CAAC;IAQJ,CAAC;IAEH,oBAAC;AAAD,CAAC,AA7CD,CAAmC,wBAAU,GA6C5C;AA7CY,qBAAa,gBA6CzB,CAAA","sourcesContent":["import { join } from 'path';\n\nimport { SeedConfig } from './seed.config';\n\n/**\n * This class extends the basic seed configuration, allowing for project specific overrides. A few examples can be found\n * below.\n */\nexport class ProjectConfig extends SeedConfig {\n\n  PROJECT_TASKS_DIR = join(process.cwd(), this.TOOLS_DIR, 'tasks', 'project');\n  FONTS_DEST = `${this.APP_DEST}/fonts`;\n  FONTS_SRC = [\n      'node_modules/font-awesome/fonts/**'\n  ];\n  constructor() {\n    super();\n     this.APP_TITLE = 'PRUEBA FERNANDO ';\n\n    /* Enable typeless compiler runs (faster) between typed compiler runs. */\n    // this.TYPED_COMPILE_INTERVAL = 5;\n\n    // Add `NPM` third-party libraries to be injected/bundled.\n    this.NPM_DEPENDENCIES = [\n      ...this.NPM_DEPENDENCIES,\n      { src: 'font-awesome/css/font-awesome.css', inject: true },\n      {src: 'jquery/dist/jquery.min.js', inject: 'libs'},\n      { src: 'highcharts/highcharts.js', inject: 'libs' },\n      {src: 'lodash/lodash.min.js', inject: 'libs'}\n      // {src: 'jquery/dist/jquery.min.js', inject: 'libs'},\n      \n    ];\n\n    // Add `local` third-party libraries to be injected/bundled.\n    this.APP_ASSETS = [\n      ...this.APP_ASSETS,\n      { src: `${this.CSS_SRC}/app.css`, inject: true, vendor: false },\n      { src: 'bootstrap/dist/js/bootstrap.min.js', inject: 'libs' },\n      { src: 'bootstrap/dist/css/bootstrap.min.css', inject: true }, // inject into css section\n      { src: 'bootstrap/dist/css/bootstrap-theme.min.css', inject: true }, // inject into css section\n      { src: 'bootstrap/dist/css/bootstrap-theme.min.css.map', inject: true }, // inject into css section\n          // {src: `${this.APP_SRC}/your-path-to-lib/libs/jquery-ui.js`, inject: true, vendor: false}\n      // {src: `${this.CSS_SRC}/path-to-lib/test-lib.css`, inject: true, vendor: false},\n    ];\n\n    // *towards the bottom, replace extended packages with this:\n\n\n\n    /* Add to or override NPM module configurations: */\n    // this.mergeObject(this.PLUGIN_CONFIGS['browser-sync'], { ghostMode: false });\n  }\n\n}\n"]}